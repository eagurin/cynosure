# Cynosure Bridge - Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make [–∫–æ–º–∞–Ω–¥–∞]

.PHONY: help install dev build start stop test lint clean docker health status logs

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
NODE_ENV ?= development
PORT ?= 3000
LOG_LEVEL ?= info

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED=\033[0;31m
GREEN=\033[0;32m
YELLOW=\033[1;33m
BLUE=\033[0;34m
NC=\033[0m # No Color

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º help
help: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
	@echo "$(BLUE)Cynosure Bridge - OpenAI API Proxy –¥–ª—è Claude$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(YELLOW)–ü—Ä–∏–º–µ—Ä—ã:$(NC)"
	@echo "  make dev          # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make start        # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  make test         # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"
	@echo "  make docker       # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤ Docker"

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	npm install
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

setup: install ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ + –ø—Ä–æ–≤–µ—Ä–∫–∏)
	@echo "$(BLUE)üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@make typecheck
	@make lint
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ$(NC)"

## –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev: ## –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å hot reload
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É $(PORT)...$(NC)"
	@echo "$(YELLOW)–û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:$(PORT)$(NC)"
	PORT=$(PORT) npm run dev

dev-debug: ## –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –æ—Ç–ª–∞–¥–∫–æ–π
	@echo "$(BLUE)üêõ –ó–∞–ø—É—Å–∫ —Å –æ—Ç–ª–∞–¥–∫–æ–π...$(NC)"
	DEBUG=cynosure:* PORT=$(PORT) npm run dev

## –°–±–æ—Ä–∫–∞ –∏ –ø—Ä–æ–¥–∞–∫—à–Ω
build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	npm run build
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω –≤ ./dist$(NC)"

start: build ## –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üåü –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	NODE_ENV=production PORT=$(PORT) npm start

start-bg: build ## –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
	@echo "$(BLUE)üåü –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ...$(NC)"
	NODE_ENV=production PORT=$(PORT) nohup npm start > server.log 2>&1 & echo $$! > server.pid
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ (PID: $$(cat server.pid))$(NC)"

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
	@if [ -f server.pid ]; then \
		echo "$(YELLOW)‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"; \
		kill $$(cat server.pid) && rm server.pid; \
		echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	else \
		echo "$(RED)‚ùå –§–∞–π–ª PID –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

restart: stop start-bg ## –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞

## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
test: ## –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	npm test

test-unit: ## –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üî¨ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤...$(NC)"
	npm run test:unit

test-integration: ## –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ integration —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üîó –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤...$(NC)"
	npm run test:integration

test-e2e: ## –ó–∞–ø—É—Å–∫ end-to-end —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üåê –ó–∞–ø—É—Å–∫ e2e —Ç–µ—Å—Ç–æ–≤...$(NC)"
	npm run test:e2e

test-coverage: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
	@echo "$(BLUE)üìä –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏...$(NC)"
	npm run test:coverage

lint: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Å ESLint
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	npm run lint

lint-fix: ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –ª–∏–Ω—Ç–µ—Ä–∞
	@echo "$(BLUE)üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∫–æ–¥–∞...$(NC)"
	npm run lint:fix

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å Prettier
	@echo "$(BLUE)‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	npm run format

format-check: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...$(NC)"
	npm run format:check

typecheck: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤
	@echo "$(BLUE)üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤...$(NC)"
	npm run typecheck

check-all: lint format-check typecheck test ## –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ (lint + format + types + tests)
	@echo "$(GREEN)‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã$(NC)"

## Docker –æ–ø–µ—Ä–∞—Ü–∏–∏
docker-build: ## –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
	@echo "$(BLUE)üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(NC)"
	docker build -t cynosure-bridge .
	@echo "$(GREEN)‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω$(NC)"

docker-run: docker-build ## –ó–∞–ø—É—Å–∫ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "$(BLUE)üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker...$(NC)"
	docker run -p $(PORT):3000 --name cynosure-bridge cynosure-bridge

docker-run-bg: docker-build ## –ó–∞–ø—É—Å–∫ Docker –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
	@echo "$(BLUE)üê≥ –ó–∞–ø—É—Å–∫ Docker –≤ —Ñ–æ–Ω–µ...$(NC)"
	docker run -d -p $(PORT):3000 --name cynosure-bridge cynosure-bridge
	@echo "$(GREEN)‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω$(NC)"

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(YELLOW)‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...$(NC)"
	docker stop cynosure-bridge || true
	docker rm cynosure-bridge || true

docker-restart: docker-stop docker-run-bg ## –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker logs cynosure-bridge

docker-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker exec -it cynosure-bridge sh

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	@curl -s http://localhost:$(PORT)/health || echo "$(RED)‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

health-detailed: ## –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö endpoints
	@echo "$(BLUE)üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ endpoints...$(NC)"
	@echo "Health endpoint:"
	@curl -s http://localhost:$(PORT)/health | jq . || echo "$(RED)‚ùå Health –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo "\nModels endpoint:"
	@curl -s http://localhost:$(PORT)/v1/models | jq . || echo "$(RED)‚ùå Models –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@if [ -f server.pid ]; then \
		echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $$(cat server.pid))$(NC)"; \
	else \
		echo "$(YELLOW)‚è∏Ô∏è  –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω$(NC)"; \
	fi
	@echo "–ü–æ—Ä—Ç: $(PORT)"
	@echo "NODE_ENV: $(NODE_ENV)"
	@echo "–í–µ—Ä—Å–∏—è Node.js: $$(node --version)"
	@echo "–í–µ—Ä—Å–∏—è npm: $$(npm --version)"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
	@if [ -f server.log ]; then \
		echo "$(BLUE)üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:$(NC)"; \
		tail -f server.log; \
	else \
		echo "$(YELLOW)üìú –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

logs-tail: ## –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	@if [ -f server.log ]; then \
		tail -f server.log; \
	else \
		echo "$(YELLOW)üìú –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make start-bg$(NC)"; \
	fi

## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
test-api: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
	@echo "$(BLUE)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...$(NC)"
	@echo "–¢–µ—Å—Ç 1: Health endpoint"
	@curl -s http://localhost:$(PORT)/health
	@echo "\n\n–¢–µ—Å—Ç 2: Models endpoint"
	@curl -s http://localhost:$(PORT)/v1/models
	@echo "\n\n–¢–µ—Å—Ç 3: Chat completions (–ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å)"
	@curl -X POST http://localhost:$(PORT)/v1/chat/completions \
		-H "Content-Type: application/json" \
		-H "Authorization: Bearer test-key" \
		-d '{"model": "gpt-4", "messages": [{"role": "user", "content": "Hello!"}], "max_tokens": 50}'

benchmark: ## –ü—Ä–æ—Å—Ç–æ–π –±–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
	@echo "$(BLUE)‚ö° –ë–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...$(NC)"
	@echo "–ó–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (10 –∑–∞–ø—Ä–æ—Å–æ–≤):"
	@for i in $$(seq 1 10); do \
		echo -n "–ó–∞–ø—Ä–æ—Å $$i: "; \
		time curl -s http://localhost:$(PORT)/health > /dev/null; \
	done

## –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
clean: ## –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∫–µ—à–∞
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	rm -rf dist/
	rm -rf coverage/
	rm -rf node_modules/.cache/
	rm -f server.log server.pid
	npm cache clean --force
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç –æ—á–∏—â–µ–Ω$(NC)"

reset: clean install ## –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–±—Ä–æ—à–µ–Ω –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

update: ## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	@echo "$(BLUE)üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	npm update
	npm audit fix
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

## –£—Ç–∏–ª–∏—Ç—ã
env: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)üåç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(NC)"
	@echo "NODE_ENV: $${NODE_ENV:-not set}"
	@echo "PORT: $${PORT:-not set}"
	@echo "ANTHROPIC_API_KEY: $${ANTHROPIC_API_KEY:+***—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω***}"
	@echo "LOG_LEVEL: $${LOG_LEVEL:-not set}"

ports: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã
	@echo "$(BLUE)üîå –°–µ—Ç–µ–≤—ã–µ –ø–æ—Ä—Ç—ã:$(NC)"
	@lsof -i :$(PORT) || echo "–ü–æ—Ä—Ç $(PORT) —Å–≤–æ–±–æ–¥–µ–Ω"

deps: ## –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(BLUE)üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞:$(NC)"
	@npm ls --depth=0

outdated: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üìä –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:$(NC)"
	@npm outdated

## Git –æ–ø–µ—Ä–∞—Ü–∏–∏
commit: check-all ## –ö–æ–º–º–∏—Ç —Å –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–æ–¥–∞
	@echo "$(BLUE)üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∫–æ–º–º–∏—Ç—É...$(NC)"
	git add .
	@echo "$(GREEN)‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã. –ì–æ—Ç–æ–≤–æ –∫ –∫–æ–º–º–∏—Ç—É!$(NC)"

## –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã
quick-start: install dev ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ + –∑–∞–ø—É—Å–∫)

full-check: clean install check-all ## –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω—É–ª—è

prod-deploy: clean install build test start ## –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω

## –°–ø—Ä–∞–≤–∫–∞ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
vars: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
	@echo "$(BLUE)‚öôÔ∏è  –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:$(NC)"
	@echo "  PORT=3000           # –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  NODE_ENV=production # –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã"
	@echo "  LOG_LEVEL=info      # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
	@echo ""
	@echo "$(YELLOW)–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:$(NC)"
	@echo "  make dev PORT=8080"
	@echo "  make start NODE_ENV=production"
	@echo "  make docker-run PORT=3001"