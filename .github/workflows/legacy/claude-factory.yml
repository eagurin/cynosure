name: Claude Factory Bridge

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      task:
        description: 'Task for Claude'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  claude-factory:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude'))
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Get Tunnel URL
        id: tunnel
        run: |
          # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å URL –∏–∑ —Ñ–∞–π–ª–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
          if [ -f ".github/TUNNEL_URL" ]; then
            TUNNEL_URL=$(grep "TUNNEL_URL=" .github/TUNNEL_URL | cut -d'=' -f2)
            echo "tunnel_url=$TUNNEL_URL" >> $GITHUB_OUTPUT
            echo "üåê –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π URL: $TUNNEL_URL"
          else
            # Fallback URLs (–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å)
            FALLBACK_URLS=(
              "https://45c0-85-159-229-107.ngrok-free.app"
              "https://45c0-85-159-229-107.ngrok-free.app"
            )
            
            for url in "${FALLBACK_URLS[@]}"; do
              echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º URL: $url"
              if curl -f "$url/health" > /dev/null 2>&1; then
                echo "tunnel_url=$url" >> $GITHUB_OUTPUT
                echo "‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π URL –Ω–∞–π–¥–µ–Ω: $url"
                break
              fi
            done
          fi
          
      - name: Parse Task
        id: task
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TASK="${{ inputs.task }}"
          else
            if [ "${{ github.event_name }}" == "issue_comment" ]; then
              COMMENT="${{ github.event.comment.body }}"
            else
              COMMENT="${{ github.event.comment.body }}"
            fi
            TASK=$(echo "$COMMENT" | sed 's/.*@claude[[:space:]]*//' | head -1)
          fi
          
          echo "task=$TASK" >> $GITHUB_OUTPUT
          echo "üéØ –ó–∞–¥–∞—á–∞: $TASK"
          
      - name: Check Factory Status
        id: factory_status
        run: |
          TUNNEL_URL="${{ steps.tunnel.outputs.tunnel_url }}"
          
          if [ -z "$TUNNEL_URL" ]; then
            echo "‚ùå URL —Ç—É–Ω–Ω–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
            echo "status=error" >> $GITHUB_OUTPUT
            echo "message=–¢—É–Ω–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Cynosure Factory –∑–∞–ø—É—â–µ–Ω–∞." >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∞–±—Ä–∏–∫–∏: $TUNNEL_URL"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
          if HEALTH_RESPONSE=$(curl -s "$TUNNEL_URL/health" 2>&1); then
            echo "‚úÖ –§–∞–±—Ä–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞"
            echo "$HEALTH_RESPONSE" | jq '.' || echo "Health response: $HEALTH_RESPONSE"
            echo "status=online" >> $GITHUB_OUTPUT
          else
            echo "‚ùå –§–∞–±—Ä–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
            echo "status=offline" >> $GITHUB_OUTPUT
            echo "message=Cynosure Factory –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ $TUNNEL_URL" >> $GITHUB_OUTPUT
          fi
          
      - name: Execute via Factory
        id: execute
        if: steps.factory_status.outputs.status == 'online'
        run: |
          TUNNEL_URL="${{ steps.tunnel.outputs.tunnel_url }}"
          TASK="${{ steps.task.outputs.task }}"
          
          echo "ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Claude —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É..."
          
          # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Claude
          REQUEST_PAYLOAD=$(cat << EOF
          {
            "model": "gpt-4",
            "messages": [
              {
                "role": "system",
                "content": "–¢—ã Claude, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —á–µ—Ä–µ–∑ Cynosure Factory. –û—Ç–≤–µ—á–∞–π –ø–æ–ª–µ–∑–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
              },
              {
                "role": "user",
                "content": "$TASK"
              }
            ],
            "max_tokens": 1500,
            "temperature": 0.7
          }
          EOF
          )
          
          # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
          RESPONSE=$(curl -s -X POST "$TUNNEL_URL/v1/chat/completions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer factory-bridge" \
            -H "User-Agent: GitHub-Actions-Claude-Factory" \
            -d "$REQUEST_PAYLOAD" 2>&1)
          
          echo "üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Ñ–∞–±—Ä–∏–∫–∏:"
          echo "$RESPONSE"
          
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç Claude
          if echo "$RESPONSE" | jq . > /dev/null 2>&1; then
            CLAUDE_RESPONSE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // .error.message // "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç"')
            RESPONSE_STATUS="success"
          else
            CLAUDE_RESPONSE="–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ñ–∞–±—Ä–∏–∫–æ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞."
            RESPONSE_STATUS="error"
          fi
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$CLAUDE_RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "status=$RESPONSE_STATUS" >> $GITHUB_OUTPUT
          
      - name: Handle Offline Factory
        id: offline
        if: steps.factory_status.outputs.status != 'online'
        run: |
          FACTORY_STATUS="${{ steps.factory_status.outputs.status }}"
          FACTORY_MESSAGE="${{ steps.factory_status.outputs.message }}"
          
          OFFLINE_RESPONSE="üî¥ **Cynosure Factory –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞**
          
–°—Ç–∞—Ç—É—Å: $FACTORY_STATUS
–°–æ–æ–±—â–µ–Ω–∏–µ: $FACTORY_MESSAGE

**–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**
1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ ngrok —Ç—É–Ω–Ω–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω  
3. –û–±–Ω–æ–≤–∏—Ç—å URL –≤ .github/TUNNEL_URL

**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ–∞–±—Ä–∏–∫–∏:**
\`\`\`bash
cd /Users/laptop/dev/cynosure
./scripts/cynosure-factory.sh start
\`\`\`"

          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$OFFLINE_RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Post Response as Comment
        if: github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const task = `${{ steps.task.outputs.task }}`;
            const tunnelUrl = `${{ steps.tunnel.outputs.tunnel_url }}`;
            const factoryStatus = `${{ steps.factory_status.outputs.status }}`;
            
            let response, statusEmoji;
            
            if (factoryStatus === 'online') {
              response = `${{ steps.execute.outputs.response }}`;
              const executeStatus = `${{ steps.execute.outputs.status }}`;
              statusEmoji = executeStatus === 'success' ? '‚úÖ' : '‚ö†Ô∏è';
            } else {
              response = `${{ steps.offline.outputs.response }}`;
              statusEmoji = 'üî¥';
            }
            
            const comment = `${statusEmoji} **Claude via Factory Bridge**

**–ó–∞–¥–∞—á–∞:** ${task}

**–û—Ç–≤–µ—Ç:**
${response}

---
*üè≠ Powered by Cynosure Factory*  
*üåê Tunnel: ${tunnelUrl || '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}*  
*ü§ñ Status: ${factoryStatus}*`;

            const issueNumber = context.issue?.number || context.payload.pull_request?.number;
            
            if (issueNumber) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: comment
              });
            }
            
      - name: Create Summary
        run: |
          echo "## üè≠ Cynosure Factory Execution" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**–¢—É–Ω–Ω–µ–ª—å URL:** ${{ steps.tunnel.outputs.tunnel_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**–°—Ç–∞—Ç—É—Å —Ñ–∞–±—Ä–∏–∫–∏:** ${{ steps.factory_status.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**–ó–∞–¥–∞—á–∞:** ${{ steps.task.outputs.task }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.factory_status.outputs.status }}" = "online" ]; then
            echo "**–û—Ç–≤–µ—Ç Claude:**" >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.execute.outputs.response }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "**–ü—Ä–æ–±–ª–µ–º–∞:**" >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.factory_status.outputs.message }}" >> $GITHUB_STEP_SUMMARY
          fi