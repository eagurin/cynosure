name: Claude Local (Self-Hosted)

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      task:
        description: '–ó–∞–¥–∞—á–∞ –¥–ª—è Claude'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  claude-local:
    runs-on: self-hosted
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude'))
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Parse Task
        id: task
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TASK="${{ inputs.task }}"
          else
            if [ "${{ github.event_name }}" == "issue_comment" ]; then
              COMMENT="${{ github.event.comment.body }}"
            else
              COMMENT="${{ github.event.comment.body }}"
            fi
            TASK=$(echo "$COMMENT" | sed 's/.*@claude[[:space:]]*//' | head -1)
          fi
          
          echo "task=$TASK" >> $GITHUB_OUTPUT
          echo "üéØ –ó–∞–¥–∞—á–∞: $TASK"
          
      - name: Ensure Local Server Running
        id: server
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Cynosure Bridge..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          if curl -f http://localhost:3000/health > /dev/null 2>&1; then
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
            echo "status=online" >> $GITHUB_OUTPUT
          else
            echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ —É–ø—Ä–æ—â—ë–Ω–Ω—É—é —Ñ–∞–±—Ä–∏–∫—É
            ./scripts/cynosure-local.sh start
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
            sleep 3
            if curl -f http://localhost:3000/health > /dev/null 2>&1; then
              echo "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
              echo "status=online" >> $GITHUB_OUTPUT
            else
              echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
              echo "status=error" >> $GITHUB_OUTPUT
            fi
          fi
          
          # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
          if [ "$(echo "$status" | cut -d'=' -f2)" = "online" ]; then
            HEALTH=$(curl -s http://localhost:3000/health)
            echo "üîç –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:"
            echo "$HEALTH" | jq '.' || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–∞—Ä—Å–∏—Ç—å health response"
          fi
          
      - name: Execute Claude Request
        id: execute
        if: steps.server.outputs.status == 'online'
        run: |
          TASK="${{ steps.task.outputs.task }}"
          
          echo "ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Claude —á–µ—Ä–µ–∑ localhost..."
          
          # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
          REQUEST_PAYLOAD=$(cat << EOF
          {
            "model": "gpt-4",
            "messages": [
              {
                "role": "system",
                "content": "–¢—ã Claude, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π Cynosure Bridge –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö —Ç—É–Ω–Ω–µ–ª–µ–π. –û—Ç–≤–µ—á–∞–π –ø–æ–ª–µ–∑–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –≠—Ç–æ –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ localhost:3000 -> Claude CLI."
              },
              {
                "role": "user",
                "content": "$TASK"
              }
            ],
            "max_tokens": 1000,
            "temperature": 0.7
          }
          EOF
          )
          
          # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞–ø—Ä—è–º—É—é –∫ localhost
          RESPONSE=$(curl -s -X POST http://localhost:3000/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer local-github-actions" \
            -H "User-Agent: GitHub-Actions-Self-Hosted" \
            -d "$REQUEST_PAYLOAD" 2>&1)
          
          echo "üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:"
          echo "$RESPONSE"
          
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç Claude
          if echo "$RESPONSE" | jq . > /dev/null 2>&1; then
            CLAUDE_RESPONSE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // .error.message // "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç"')
            RESPONSE_STATUS="success"
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            MODEL_USED=$(echo "$RESPONSE" | jq -r '.model // "unknown"')
            TOKENS_USED=$(echo "$RESPONSE" | jq -r '.usage.total_tokens // "unknown"')
            
            echo "model_used=$MODEL_USED" >> $GITHUB_OUTPUT
            echo "tokens_used=$TOKENS_USED" >> $GITHUB_OUTPUT
          else
            CLAUDE_RESPONSE="–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º. –û—Ç–≤–µ—Ç: $RESPONSE"
            RESPONSE_STATUS="error"
          fi
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$CLAUDE_RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "status=$RESPONSE_STATUS" >> $GITHUB_OUTPUT
          
      - name: Handle Server Error
        id: error
        if: steps.server.outputs.status != 'online'
        run: |
          ERROR_RESPONSE="üî¥ **–õ–æ–∫–∞–ª—å–Ω—ã–π Cynosure Bridge –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω**
          
**–°—Ç–∞—Ç—É—Å**: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:3000

**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**
1. –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω
2. –ü–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º  
3. –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Claude CLI

**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:**
\`\`\`bash
# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
./scripts/cynosure-local.sh status

# –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏
./scripts/cynosure-local.sh logs

# –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
./scripts/cynosure-local.sh restart

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç
lsof -i:3000
\`\`\`

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:**
- ‚úÖ –ù–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Ç—É–Ω–Ω–µ–ª–µ–π
- ‚úÖ –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: GitHub Actions ‚Üí localhost:3000 ‚Üí Claude CLI
- ‚úÖ –ë—ã—Å—Ç—Ä–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–Ω–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏ ngrok)
- ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–µ–µ (–Ω–µ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞)"

          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$ERROR_RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Post Response as Comment
        if: github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const task = `${{ steps.task.outputs.task }}`;
            const serverStatus = `${{ steps.server.outputs.status }}`;
            
            let response, statusEmoji, additionalInfo = '';
            
            if (serverStatus === 'online') {
              response = `${{ steps.execute.outputs.response }}`;
              const executeStatus = `${{ steps.execute.outputs.status }}`;
              statusEmoji = executeStatus === 'success' ? '‚úÖ' : '‚ö†Ô∏è';
              
              if (executeStatus === 'success') {
                const modelUsed = `${{ steps.execute.outputs.model_used }}`;
                const tokensUsed = `${{ steps.execute.outputs.tokens_used }}`;
                additionalInfo = `\n*ü§ñ Model: ${modelUsed} | üî¢ Tokens: ${tokensUsed}*`;
              }
            } else {
              response = `${{ steps.error.outputs.response }}`;
              statusEmoji = 'üî¥';
            }
            
            const comment = `${statusEmoji} **Claude via Local Bridge**

**–ó–∞–¥–∞—á–∞:** ${task}

**–û—Ç–≤–µ—Ç:**
${response}

---
*üè† –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: localhost:3000*  
*üì° Self-hosted runner*  
*‚ö° –ë–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö —Ç—É–Ω–Ω–µ–ª–µ–π*${additionalInfo}`;

            const issueNumber = context.issue?.number || context.payload.pull_request?.number;
            
            if (issueNumber) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: comment
              });
            }
            
      - name: Create Summary
        run: |
          echo "## üè† –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Claude" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**–°–µ—Ä–≤–µ—Ä**: localhost:3000" >> $GITHUB_STEP_SUMMARY
          echo "**–°—Ç–∞—Ç—É—Å**: ${{ steps.server.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**–ó–∞–¥–∞—á–∞**: ${{ steps.task.outputs.task }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.server.outputs.status }}" = "online" ]; then
            echo "**–û—Ç–≤–µ—Ç Claude:**" >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.execute.outputs.response }}" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ steps.execute.outputs.status }}" = "success" ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### üìä –î–µ—Ç–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è" >> $GITHUB_STEP_SUMMARY
              echo "- **–ú–æ–¥–µ–ª—å**: ${{ steps.execute.outputs.model_used }}" >> $GITHUB_STEP_SUMMARY
              echo "- **–¢–æ–∫–µ–Ω—ã**: ${{ steps.execute.outputs.tokens_used }}" >> $GITHUB_STEP_SUMMARY
              echo "- **–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ**: –ü—Ä—è–º–æ–µ (–±–µ–∑ —Ç—É–Ω–Ω–µ–ª–µ–π)" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:" >> $GITHUB_STEP_SUMMARY
              echo "- –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ localhost:3000" >> $GITHUB_STEP_SUMMARY
              echo "- –ù–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç ngrok —Ç—É–Ω–Ω–µ–ª–µ–π" >> $GITHUB_STEP_SUMMARY
              echo "- –ë—ã—Å—Ç—Ä–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–Ω–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏ —Ç—É–Ω–Ω–µ–ª—è)" >> $GITHUB_STEP_SUMMARY
              echo "- –ë–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω–æ (–Ω–µ—Ç changeable URLs)" >> $GITHUB_STEP_SUMMARY
              echo "- –ë–µ–∑–æ–ø–∞—Å–Ω–µ–µ (–Ω–µ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞)" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "**–ü—Ä–æ–±–ª–µ–º–∞**: ${{ steps.server.outputs.status }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`./scripts/cynosure-local.sh status\` –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏" >> $GITHUB_STEP_SUMMARY
          fi