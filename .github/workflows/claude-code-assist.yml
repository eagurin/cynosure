name: Claude Code Assist

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Task for Claude Code'
        required: true
        type: string
      target_branch:
        description: 'Target branch for changes'
        required: false
        default: 'claude-code-assist'
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  claude-assist:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Feature Branch
      run: |
        git checkout -b ${{ inputs.target_branch }}-${{ github.run_id }}
        
    - name: Setup Environment
      run: |
        # Install dependencies
        npm ci
        
    - name: Execute Claude Code Task (MAX Subscription)
      id: claude-task
      uses: anthropics/claude-code-action@beta
      with:
        prompt: |
          You are working on the Cynosure Bridge project, an OpenAI API-compatible proxy for Claude.
          
          PROJECT CONTEXT:
          - TypeScript/Node.js application with Fastify server
          - Translates OpenAI API requests to Claude format
          - Supports streaming responses and multiple model mappings
          - Uses ESLint, Prettier, Vitest for code quality
          - Git Flow: feature branches â†’ dev â†’ master
          
          PROJECT STRUCTURE:
          - src/server/ - HTTP routes and server setup
          - src/translation/ - OpenAI â†” Claude format conversion
          - src/claude/ - Claude CLI integration
          - src/models/ - TypeScript interfaces
          - src/utils/ - Helper functions
          - tests/ - Unit, integration, and e2e tests
          
          TASK: ${{ inputs.prompt }}
          
          REQUIREMENTS:
          1. Follow TypeScript best practices with strict typing
          2. Maintain OpenAI API compatibility
          3. Use existing patterns and conventions
          4. Include proper error handling and logging
          5. Add JSDoc comments for complex functions
          6. Follow existing code style (2 spaces, single quotes)
          7. If adding features, include corresponding tests
          8. Update documentation if needed
          
          Please analyze the codebase and implement the requested changes following the established patterns.
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      env:
        ACTIONS_STEP_DEBUG: true
        
    - name: Run Tests
      run: |
        npm test
        
    - name: Run Linting
      run: |
        npm run lint:fix
        npm run format
        
    - name: Commit Changes
      run: |
        git config --global user.name "Claude Code Assistant"
        git config --global user.email "claude-assist@cynosure.dev"
        
        git add -A
        git commit -m "feat: ${{ inputs.prompt }}
        
        Implemented by Claude Code based on user request.
        
        Co-Authored-By: Claude Code Assistant <claude-assist@cynosure.dev>
        Co-Authored-By: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
        
    - name: Push Changes
      run: |
        git push origin HEAD
        
    - name: Create Pull Request
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Claude Code: ${context.payload.inputs.prompt}`,
            body: `## ðŸ¤– Claude Code Implementation
            
            ### Task
            ${context.payload.inputs.prompt}
            
            ### Changes
            This PR contains changes implemented by Claude Code based on the requested task.
            
            ### Checklist
            - [ ] Code follows project conventions
            - [ ] Tests are passing
            - [ ] Documentation is updated
            - [ ] Linting passes
            
            ### Review
            Please review the changes carefully before merging.
            
            ---
            *Generated by Claude Code Assistant*
            *Requested by: @${context.actor}*`,
            head: `${context.payload.inputs.target_branch}-${context.runId}`,
            base: 'dev'
          });
          
          console.log(`Created PR #${pr.data.number}`);
          
          // Add labels
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.data.number,
            labels: ['claude-code', 'automated']
          });

# Quick fix workflow
  quick-fix:
    if: |
      github.event_name == 'issue_comment' && 
      startsWith(github.event.comment.body, '/claude quick-fix')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Parse Fix Request
      id: parse
      run: |
        COMMENT="${{ github.event.comment.body }}"
        FIX=$(echo "$COMMENT" | sed 's/\/claude quick-fix //')
        echo "fix_request=$FIX" >> $GITHUB_OUTPUT
        
    - name: Apply Quick Fix (MAX Subscription)
      uses: anthropics/claude-code-action@beta
      with:
        prompt: |
          Quick Fix Request: ${{ steps.parse.outputs.fix_request }}
          
          You are applying a quick fix to the Cynosure Bridge project.
          
          PROJECT CONTEXT:
          - TypeScript/Node.js OpenAI API proxy
          - Requires strict type safety and API compatibility
          - Uses modern ES modules and Fastify server
          
          QUICK FIX GUIDELINES:
          This should be a minimal, surgical change focusing on:
          - TypeScript type corrections
          - Import statement fixes
          - ESLint/Prettier violations
          - Simple syntax errors
          - Basic functionality fixes
          
          REQUIREMENTS:
          1. Keep changes minimal and targeted
          2. Ensure code compiles and passes basic checks
          3. Don't break existing functionality
          4. Follow project conventions
          
          Please apply the requested quick fix efficiently.
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      env:
        ACTIONS_STEP_DEBUG: true
        
    - name: Comment Result
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `âœ… Claude Code quick fix applied! (MAX Subscription)
            
            **Request:** ${{ steps.parse.outputs.fix_request }}
            
            Changes have been implemented and committed to the branch.
            
            *Powered by Claude MAX subscription*`
          });