#!/bin/bash

# Cynosure Bridge Service Manager
# –£–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –æ–¥–Ω–æ–º —Ö–æ—Å—Ç–µ

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
LOGDIR="$PROJECT_DIR/logs"
PIDDIR="$PROJECT_DIR/run"

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$LOGDIR" "$PIDDIR"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CYNOSURE_PORT=${CYNOSURE_PORT:-3000}
NGROK_SUBDOMAIN=${NGROK_SUBDOMAIN:-cynosure-bridge}
NGROK_TOKEN=${NGROK_TOKEN:-""}

# –§–∞–π–ª—ã PID
CYNOSURE_PID="$PIDDIR/cynosure.pid"
NGROK_PID="$PIDDIR/ngrok.pid"

# –õ–æ–≥–∏
CYNOSURE_LOG="$LOGDIR/cynosure.log"
NGROK_LOG="$LOGDIR/ngrok.log"
SERVICE_LOG="$LOGDIR/service.log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$SERVICE_LOG"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    if ! command -v node &> /dev/null; then
        log "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if ! command -v ngrok &> /dev/null; then
        log "‚ùå ngrok –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if ! command -v claude &> /dev/null; then
        log "‚ùå Claude CLI –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ Cynosure Bridge
start_cynosure() {
    if [ -f "$CYNOSURE_PID" ] && kill -0 "$(cat "$CYNOSURE_PID")" 2>/dev/null; then
        log "üü¢ Cynosure Bridge —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $(cat "$CYNOSURE_PID"))"
        return 0
    fi
    
    log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Cynosure Bridge..."
    cd "$PROJECT_DIR"
    
    # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    npm run build >> "$CYNOSURE_LOG" 2>&1
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    PORT="$CYNOSURE_PORT" nohup npm start >> "$CYNOSURE_LOG" 2>&1 &
    echo $! > "$CYNOSURE_PID"
    
    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞
    sleep 5
    
    if curl -f "http://localhost:$CYNOSURE_PORT/health" > /dev/null 2>&1; then
        log "‚úÖ Cynosure Bridge –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $CYNOSURE_PORT (PID: $(cat "$CYNOSURE_PID"))"
    else
        log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Cynosure Bridge"
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ ngrok
start_ngrok() {
    if [ -f "$NGROK_PID" ] && kill -0 "$(cat "$NGROK_PID")" 2>/dev/null; then
        log "üü¢ ngrok —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $(cat "$NGROK_PID"))"
        return 0
    fi
    
    log "üåê –ó–∞–ø—É—Å–∫–∞–µ–º ngrok —Ç—É–Ω–Ω–µ–ª—å..."
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ngrok –∫–æ–º–∞–Ω–¥—É
    NGROK_CMD="ngrok http $CYNOSURE_PORT --log=stdout"
    
    if [ ! -z "$NGROK_TOKEN" ]; then
        ngrok config add-authtoken "$NGROK_TOKEN"
        NGROK_CMD="$NGROK_CMD --subdomain=$NGROK_SUBDOMAIN"
        log "üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º authtoken –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å—É–±–¥–æ–º–µ–Ω–∞: $NGROK_SUBDOMAIN"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok
    nohup $NGROK_CMD > "$NGROK_LOG" 2>&1 &
    echo $! > "$NGROK_PID"
    
    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞
    sleep 10
    
    # –ü–æ–ª—É—á–∞–µ–º URL
    NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' 2>/dev/null || echo "")
    
    if [ ! -z "$NGROK_URL" ]; then
        log "‚úÖ ngrok —Ç—É–Ω–Ω–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω: $NGROK_URL (PID: $(cat "$NGROK_PID"))"
        echo "$NGROK_URL" > "$PROJECT_DIR/ngrok-url.txt"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º workflow —Ñ–∞–π–ª—ã —Å –Ω–æ–≤—ã–º URL
        update_workflows "$NGROK_URL"
    else
        log "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ngrok URL"
        return 1
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ workflow —Ñ–∞–π–ª–æ–≤
update_workflows() {
    local ngrok_url="$1"
    log "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º workflow —Ñ–∞–π–ª—ã —Å URL: $ngrok_url"
    
    # –ù–∞—Ö–æ–¥–∏–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ workflow —Ñ–∞–π–ª—ã —Å ngrok URL
    find "$PROJECT_DIR/.github/workflows" -name "*.yml" -exec \
        sed -i.bak "s|https://[^.]*\.ngrok[^\"]*|$ngrok_url|g" {} \;
    
    log "‚úÖ Workflow —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
stop_service() {
    local service_name="$1"
    local pid_file="$2"
    
    if [ -f "$pid_file" ]; then
        local pid=$(cat "$pid_file")
        if kill -0 "$pid" 2>/dev/null; then
            log "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $service_name (PID: $pid)..."
            kill "$pid"
            sleep 2
            if kill -0 "$pid" 2>/dev/null; then
                kill -9 "$pid"
            fi
        fi
        rm -f "$pid_file"
        log "‚úÖ $service_name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log "üü° $service_name –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
status() {
    log "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    
    # Cynosure Bridge
    if [ -f "$CYNOSURE_PID" ] && kill -0 "$(cat "$CYNOSURE_PID")" 2>/dev/null; then
        log "üü¢ Cynosure Bridge: –†–ê–ë–û–¢–ê–ï–¢ (PID: $(cat "$CYNOSURE_PID"))"
        if curl -f "http://localhost:$CYNOSURE_PORT/health" > /dev/null 2>&1; then
            log "   ‚îî‚îÄ API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:$CYNOSURE_PORT"
        else
            log "   ‚îî‚îÄ ‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    else
        log "üî¥ Cynosure Bridge: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
    fi
    
    # ngrok
    if [ -f "$NGROK_PID" ] && kill -0 "$(cat "$NGROK_PID")" 2>/dev/null; then
        log "üü¢ ngrok: –†–ê–ë–û–¢–ê–ï–¢ (PID: $(cat "$NGROK_PID"))"
        if [ -f "$PROJECT_DIR/ngrok-url.txt" ]; then
            log "   ‚îî‚îÄ URL: $(cat "$PROJECT_DIR/ngrok-url.txt")"
        fi
    else
        log "üî¥ ngrok: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
    fi
    
    # Claude CLI
    if command -v claude &> /dev/null; then
        log "üü¢ Claude CLI: –î–û–°–¢–£–ü–ï–ù"
        log "   ‚îî‚îÄ –ü—É—Ç—å: $(which claude)"
    else
        log "üî¥ Claude CLI: –ù–ï –ù–ê–ô–î–ï–ù"
    fi
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
case "${1:-}" in
    start)
        log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Cynosure Service..."
        check_dependencies
        start_cynosure
        start_ngrok
        status
        log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
        ;;
    stop)
        log "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."
        stop_service "ngrok" "$NGROK_PID"
        stop_service "Cynosure Bridge" "$CYNOSURE_PID"
        log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    restart)
        $0 stop
        sleep 2
        $0 start
        ;;
    status)
        status
        ;;
    logs)
        echo "üìã –õ–æ–≥–∏ Cynosure Bridge:"
        tail -n 20 "$CYNOSURE_LOG" 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo ""
        echo "üìã –õ–æ–≥–∏ ngrok:"
        tail -n 20 "$NGROK_LOG" 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        ;;
    url)
        if [ -f "$PROJECT_DIR/ngrok-url.txt" ]; then
            cat "$PROJECT_DIR/ngrok-url.txt"
        else
            echo "ngrok URL –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs|url}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  url      - –ü–æ–∫–∞–∑–∞—Ç—å ngrok URL"
        exit 1
        ;;
esac