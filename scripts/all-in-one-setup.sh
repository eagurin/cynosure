#!/bin/bash

# üéØ CYNOSURE ALL-IN-ONE SETUP
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Cynosure Bridge

set -e

echo "üöÄ CYNOSURE ALL-IN-ONE SETUP"
echo "============================"
echo ""

# üìÅ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
LOG_FILE="$PROJECT_DIR/setup.log"

# üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo "[$(date '+%H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log "üèóÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Cynosure..."
log "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"

cd "$PROJECT_DIR"

# 1. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

# Node.js
if ! command -v node &> /dev/null; then
    log "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
    exit 1
fi

NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    log "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node --version)"
    exit 1
fi

log "‚úÖ Node.js: $(node --version)"

# npm
if ! command -v npm &> /dev/null; then
    log "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log "‚úÖ npm: $(npm --version)"

# Claude CLI
if [ ! -f "/Users/laptop/.claude/local/claude" ]; then
    log "‚ùå Claude CLI –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ /Users/laptop/.claude/local/claude"
    log "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Claude Code –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
    exit 1
fi

log "‚úÖ Claude CLI –Ω–∞–π–¥–µ–Ω"

# curl (–¥–ª—è —Ç–µ—Å—Ç–æ–≤)
if ! command -v curl &> /dev/null; then
    log "‚ùå curl –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log "‚úÖ curl –¥–æ—Å—Ç—É–ø–µ–Ω"

# jq (–¥–ª—è —Ç–µ—Å—Ç–æ–≤, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if command -v jq &> /dev/null; then
    log "‚úÖ jq –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    log "‚ö†Ô∏è  jq –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤)"
fi

# 2. üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

npm install

if [ $? -ne 0 ]; then
    log "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 3. üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
log "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."

if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        cp .env.example .env
        log "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
    else
        cat > .env << 'EOF'
# Cynosure Configuration
PORT=3000
HOST=0.0.0.0
NODE_ENV=development
CLAUDE_PATH=/Users/laptop/.claude/local/claude
WORKING_DIRECTORY=/Users/laptop/dev/cynosure
MAX_TURNS=5
TIMEOUT=60000
EOF
        log "‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª"
    fi
else
    log "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# 4. üèóÔ∏è –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
log "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."

npm run build

if [ $? -ne 0 ]; then
    log "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

log "‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω"

# 5. üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
log "üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞..."

npm run typecheck

if [ $? -ne 0 ]; then
    log "‚ùå –û—à–∏–±–∫–∏ —Ç–∏–ø–æ–≤ TypeScript"
    exit 1
fi

log "‚úÖ –¢–∏–ø—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# 6. üß™ –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã
log "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º unit —Ç–µ—Å—Ç—ã..."

npm run test:unit

if [ $? -ne 0 ]; then
    log "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ unit —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
else
    log "‚úÖ Unit —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã"
fi

# 7. üöÄ –ü—Ä–æ–±–Ω—ã–π –∑–∞–ø—É—Å–∫
log "üöÄ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."

# –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3000
if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null 2>&1; then
    log "üîÑ –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3000..."
    lsof -ti:3000 | xargs kill -9 2>/dev/null || true
    sleep 2
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
PORT=3000 nohup npm start > test_server.log 2>&1 &
SERVER_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
log "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
HEALTH_CHECK=false
for i in {1..10}; do
    if curl -f "http://localhost:3000/health" >/dev/null 2>&1; then
        HEALTH_CHECK=true
        break
    fi
    sleep 1
done

if [ "$HEALTH_CHECK" = true ]; then
    log "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    
    # –¢–µ—Å—Ç API
    log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API..."
    
    CHAT_RESPONSE=$(curl -s -X POST "http://localhost:3000/v1/chat/completions" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer test" \
        -d '{
            "model": "gpt-4",
            "messages": [{"role": "user", "content": "–°–∫–∞–∂–∏ OK –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—à—å"}],
            "max_tokens": 10
        }' 2>/dev/null)
    
    if echo "$CHAT_RESPONSE" | grep -q "choices"; then
        log "‚úÖ Chat API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log "‚ö†Ô∏è  Chat API –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
    
else
    log "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    cat test_server.log | tail -10
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
kill $SERVER_PID 2>/dev/null || true
rm -f test_server.log

# 8. üìú –°–æ–∑–¥–∞–Ω–∏–µ —É–¥–æ–±–Ω—ã—Ö –∞–ª–∏–∞—Å–æ–≤
log "üìú –°–æ–∑–¥–∞–µ–º —É–¥–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã..."

chmod +x scripts/cynosure-local.sh

# 9. ‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log "‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

if [ -f "dist/index.js" ] && [ -f ".env" ] && [ -d "node_modules" ]; then
    log "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
    echo ""
    echo "üéØ –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:"
    echo "=========================="
    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "   ./scripts/cynosure-local.sh start"
    echo ""
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
    echo "   ./scripts/cynosure-local.sh status"
    echo ""
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
    echo "   ./scripts/cynosure-local.sh test"
    echo ""
    echo "üåê URLs:"
    echo "   ‚Ä¢ Local:  http://localhost:3000"
    echo "   ‚Ä¢ Health: http://localhost:3000/health"
    echo "   ‚Ä¢ API:    http://localhost:3000/v1/chat/completions"
    echo "   ‚Ä¢ Docs:   http://localhost:3000/docs"
    echo ""
    echo "üìã –õ–æ–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $LOG_FILE"
    echo ""
else
    log "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏"
    exit 1
fi