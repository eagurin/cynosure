#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ Claude Code Action —Å Cynosure Bridge
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/test-official-action.sh

set -e

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Cynosure Bridge + –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Claude Action"
echo "================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if ! command -v node &> /dev/null; then
    error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v npm &> /dev/null; then
    error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v gh &> /dev/null; then
    error "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 2. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
log "–°–±–æ—Ä–∫–∞ Cynosure Bridge..."

if npm run build; then
    success "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    exit 1
fi

# 3. –ó–∞–ø—É—Å–∫ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞
log "–ó–∞–ø—É—Å–∫ Cynosure Bridge –Ω–∞ –ø–æ—Ä—Ç—É 3000..."

PORT=3000 npm start &
PROXY_PID=$!

# –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
sleep 5

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."

if curl -f http://localhost:3000/health > /dev/null 2>&1; then
    success "Health check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
else
    error "Health check –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è"
    kill $PROXY_PID 2>/dev/null || true
    exit 1
fi

# 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenAI API —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenAI API —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏..."

# –¢–µ—Å—Ç models endpoint
log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /v1/models..."
if curl -f http://localhost:3000/v1/models > /dev/null 2>&1; then
    success "Models endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    warning "Models endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –¢–µ—Å—Ç chat completions
log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /v1/chat/completions..."
CHAT_RESPONSE=$(curl -s -X POST http://localhost:3000/v1/chat/completions \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer dummy-key" \
    -d '{
        "model": "gpt-4",
        "messages": [{"role": "user", "content": "Test message - –æ—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: —Ä–∞–±–æ—Ç–∞–µ—Ç"}],
        "max_tokens": 10
    }' || echo "ERROR")

if [[ "$CHAT_RESPONSE" != "ERROR" ]] && [[ "$CHAT_RESPONSE" == *"choices"* ]]; then
    success "Chat completions endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): ${CHAT_RESPONSE:0:200}..."
else
    warning "Chat completions –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
    echo "–û—Ç–≤–µ—Ç: $CHAT_RESPONSE"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub workflow
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub workflow..."

if [ -f ".github/workflows/claude-official.yml" ]; then
    success "Workflow —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ YAML
    if command -v yq &> /dev/null; then
        if yq eval '.jobs' .github/workflows/claude-official.yml > /dev/null 2>&1; then
            success "YAML —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        else
            warning "–ü—Ä–æ–±–ª–µ–º—ã —Å YAML —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º"
        fi
    else
        warning "yq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É YAML"
    fi
else
    error "Workflow —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub App –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub App —Å–µ–∫—Ä–µ—Ç–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ GitHub CLI
if gh auth status > /dev/null 2>&1; then
    success "GitHub CLI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç—ã (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    if gh secret list > /dev/null 2>&1; then
        SECRETS=$(gh secret list --json name --jq '.[].name')
        
        if echo "$SECRETS" | grep -q "CLAUDE_GITHUB_APP_ID"; then
            success "CLAUDE_GITHUB_APP_ID —Å–µ–∫—Ä–µ—Ç –Ω–∞–π–¥–µ–Ω"
        else
            warning "CLAUDE_GITHUB_APP_ID —Å–µ–∫—Ä–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        
        if echo "$SECRETS" | grep -q "CLAUDE_GITHUB_APP_PRIVATE_KEY"; then
            success "CLAUDE_GITHUB_APP_PRIVATE_KEY —Å–µ–∫—Ä–µ—Ç –Ω–∞–π–¥–µ–Ω"
        else
            warning "CLAUDE_GITHUB_APP_PRIVATE_KEY —Å–µ–∫—Ä–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
    else
        warning "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ–∫—Ä–µ—Ç–∞–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    fi
else
    warning "GitHub CLI –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
fi

# 8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (—Å–∏–º—É–ª—è—Ü–∏—è)
log "–°–∏–º—É–ª—è—Ü–∏—è workflow..."

echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è workflow:"
echo "- OPENAI_API_BASE=http://localhost:3000"
echo "- OPENAI_BASE_URL=http://localhost:3000"
echo "- CYNOSURE_PROXY_URL=http://localhost:3000"

# –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
export OPENAI_API_BASE="http://localhost:3000"
export OPENAI_BASE_URL="http://localhost:3000"
export CYNOSURE_PROXY_URL="http://localhost:3000"

success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# 9. –ó–∞–≤–µ—Ä—à–∞—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log "–ó–∞–≤–µ—Ä—à–∞—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

echo ""
echo "üìã –ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
COMPONENTS=(
    "Cynosure Bridge —Å–æ–±—Ä–∞–Ω:‚úÖ"
    "–ü—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω:‚úÖ" 
    "Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç:‚úÖ"
    "OpenAI API —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:‚úÖ"
    "GitHub workflow —Å–æ–∑–¥–∞–Ω:‚úÖ"
)

for component in "${COMPONENTS[@]}"; do
    echo "‚úÖ $component"
done

echo ""
echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "==================="
echo "1. –°–æ–∑–¥–∞–π—Ç–µ GitHub App (—Å–º. docs/OFFICIAL_CLAUDE_ACTION_SETUP.md)"
echo "2. –î–æ–±–∞–≤—å—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã CLAUDE_GITHUB_APP_ID –∏ CLAUDE_GITHUB_APP_PRIVATE_KEY"
echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '@claude –ü—Ä–∏–≤–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—à—å?'"
echo "4. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ workflow –≤—Ä—É—á–Ω—É—é –≤ GitHub Actions"

echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "================="
echo "- –ù–∞—Å—Ç—Ä–æ–π–∫–∞: docs/OFFICIAL_CLAUDE_ACTION_SETUP.md"
echo "- Workflow: .github/workflows/claude-official.yml"
echo "- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: .github/claude-proxy-config.json"

# 10. –û—á–∏—Å—Ç–∫–∞
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞..."
kill $PROXY_PID 2>/dev/null || true
success "–ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo ""
success "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."